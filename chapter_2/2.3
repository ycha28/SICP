#lang sicp
(define (square n)
  (* n n))

(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))

(define (average a b)
  (/ (+ a b)
     2))

(define (average-damp f)
  (lambda (x) (average x (f x))))

(define (sqrt x)
  (fixed-point (average-damp (lambda (y) (/ x y)))
               1.0))

(define (make-point x y)
  (cons x y))

(define (x-point point)
  (car point))

(define (y-point point)
  (cdr point))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(define (make-segment p1 p2)
  (cons p1 p2))

(define (start-segment s)
  (car s))

(define (end-segment s)
  (cdr s))

(define (midpoint-segment s)
  (let ((start (start-segment s))
        (end (end-segment s)))
    (make-point (average (x-point start) (x-point end))
                (average (y-point start) (y-point end)))))


(define (length-of-segment s)
  (let ((start (start-segment s))
        (end (end-segment s)))
    (sqrt (+ (square (- (x-point end)
                        (x-point start)))
             (square (- (y-point end)
                        (y-point start)))))))

(define (rectangle-1 w h)
  (cons w h))

(define (rectangle-2 p1 p2)
  (cons (make-segment p1 (make-point (x-point p2) (y-point p1)))
        (make-segment p2 (make-point (x-point p2) (y-point p1)))))
                      
(define (width r)
  (length-of-segment (car r)))

(define (height r)
  (length-of-segment (cdr r)))

(define (perimeter r)
  (+ (* 2 (width r))
     (* 2 (height r))))

(define (area r)
  (* (width r) (height r)))

(define h (make-segment (make-point 1 1) (make-point 1 5)))
(define w (make-segment (make-point 1 1) (make-point 5 1)))

(define r1 (rectangle-1 w h))
(perimeter r1)
(area r1)

(define r2 (rectangle-2 (make-point 1 5) (make-point 5 1)))
(perimeter r2)
(area r2)
